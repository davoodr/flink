<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.234" tests="69" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.131-b11"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/adrian/Masterarbeit/flink"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/adrian/Masterarbeit/flink"/>
    <property name="java.runtime.version" value="1.8.0_131-8u131-b11-0ubuntu1.16.04.2-b11"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/local/apache-maven-3.3.3/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.4.0-83-generic"/>
    <property name="user.home" value="/home/adrian"/>
    <property name="user.timezone" value="Europe/Berlin"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="user.name" value="adrian"/>
    <property name="java.class.path" value="/usr/local/apache-maven-3.3.3/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher package"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_131"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/local/apache-maven-3.3.3"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="testSubclassOfTuple" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.017"/>
  <testcase name="testFunctionDependingOnInputWithTupleInput" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testTupleWithPojo" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.03"/>
  <testcase name="testFunctionDependingOnInputWithTupleInputWithTypeMismatch" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0"/>
  <testcase name="testBasicArray2" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.004"/>
  <testcase name="testCreateTypeInfoFromInstance" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.002"/>
  <testcase name="testEitherFromObjectException" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.004"/>
  <testcase name="testNestedTupleGenerics" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.014"/>
  <testcase name="testBasicArray" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.011"/>
  <testcase name="testCustomArrayWithTypeVariable" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testGenericTypeWithSuperclassInput" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testInputInference1" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.002"/>
  <testcase name="testInputInference2" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testInputInference3" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testInputInference4" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testAbstractAndInterfaceTypes" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.003"/>
  <testcase name="testFunctionDependingOnInputFromInput" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0"/>
  <testcase name="testTypeErasure" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.003"/>
  <testcase name="testRow" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.005"/>
  <testcase name="testDuplicateValue" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testEnumType" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testGenericsInDirectSuperclass" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.003"/>
  <testcase name="testValue" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.009"/>
  <testcase name="testPojo" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.003"/>
  <testcase name="testEitherHierarchy" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.002"/>
  <testcase name="testTupleArray" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.002"/>
  <testcase name="testInputMismatchWithRawFuntion" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0"/>
  <testcase name="testBasicType" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testResultTypeQueryable" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testParameterizedPojo" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testFunctionDependingPartialOnInput2" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testValueSupertypeException" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testExtractKeySelector" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testInputMismatchExceptions" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testFunctionDependingOnInputWithMissingInput" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0"/>
  <testcase name="testChainedGenericsNotInSuperclass" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.002"/>
  <testcase name="testSameGenericVariable" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testFunctionDependingOnInputWithFunctionHierarchy2" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testSqlTimeTypes" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.003"/>
  <testcase name="testBigBasicTypes" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testTupleSupertype" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testFunctionDependingOnInputWithFunctionHierarchy" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0"/>
  <testcase name="testMissingTupleGenerics" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testFunctionWithMissingGenerics" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testGenericsNotInSuperclass" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testFunctionInputInOutputMultipleTimes2" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.002"/>
  <testcase name="testFunctionDependingOnUnknownInput" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0"/>
  <testcase name="testGenericsNotInSuperclassWithNonGenericClassAtEnd" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testDuplicateValueNested" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testParameterizedArrays" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testTupleWithTuples" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.011"/>
  <testcase name="testInterface" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testTupleWithBasicTypes" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.006"/>
  <testcase name="testEither" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.002"/>
  <testcase name="testMultiDimensionalArray" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.032"/>
  <testcase name="testFunctionDependingPartialOnInput" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testGenericTypeWithSubclassInput" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.004"/>
  <testcase name="testFunctionDependingOnInputWithCustomTupleInput" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.002"/>
  <testcase name="testInputInferenceWithCustomTupleAndRichFunction" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.004"/>
  <testcase name="testInputWithCustomTypeInfo" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.003"/>
  <testcase name="testFunctionInputInOutputMultipleTimes" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testFunctionWithNoGenericSuperclass" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.005"/>
  <testcase name="testTuple0" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testFunctionDependingOnInputAsSuperclass" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testCustomArray" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.004"/>
  <testcase name="testTupleOfValues" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0"/>
  <testcase name="testNestedTupleGenerics2" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
  <testcase name="testTupleWithPrimitiveArray" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.008"/>
  <testcase name="testFunction" classname="org.apache.flink.api.java.typeutils.TypeExtractorTest" time="0.001"/>
</testsuite>